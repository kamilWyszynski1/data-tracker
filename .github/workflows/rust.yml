# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [push]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: Swatinem/rust-cache@v1

      - run: |
          cargo -V
          rustup override set nightly
          cargo +nightly c

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain with clippy available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: Swatinem/rust-cache@v1

      - run: |
          cargo -V
          rustup override set nightly
          cargo +nightly t

  coverage:
    name: Add coverage badge
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install cmake
        run: |
          apt-get update -y
          apt-get update
          apt-get -y install cmake

      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          # token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
          fail_ci_if_error: true
